workflows:
  default-workflow:
    name: Default Workflow
    environment:
      vars:
        ANDROID_FIREBASE_SECRET: Encrypted(Z0FBQUFBQmR2eHNYbkN1SkRoYkxIbUZzVlFtMTVFREh2QXF5eWFKVk5wRUxWS0FpR1hJWnhDRnFCSy05dHZLZThKeWw2REtZTThTcVZISllIX1ExdFpGRlRSNWNMRC1oNzJsYlVNYWs3WnJ6R0JneDM2djZjTGJLQzg0RlQtUEhjMGF2Nzh1V3hLVlhmY3h6UVJvUDJLMC13UTBqVFdrMmhCYml1NXVxcTZXZU1DbkxvT3lRR1hiMGozR0ZteHNYQzlPczlkV3BTUVJfcFUwOG42Q1RRZThGcUhjSWd3RG1PcXl5dXVsQUlOby1pd0V3VS13N2xEQ3dWekFkOU9FZFJuUzllQzVGZVBhVTAxOEJSUG1jR2pWN3E0a0xKWTlQN3gyNzY2UEQ1OXNiS3ByNDV0UzlyeDFhQU1WTUlEekU1R3RmMVJUemYwUHUyUkN0NXlNLVBaQkRZTVluRTZIQjNlYTI3b1FSc3RLZS05QTctWkd0UnoxdUxOWkVINmo2ZF9ZYkYwNkhJRGZabjNDZ3FYN294R1VYLV85NllHRlFBSE5DTVNUM0hqNHk1MFNTdmwzM1d6UnpmX0pGX1dMRUdNTTNjbWowNW9KdXBNdEgzUlNVWkMxaWQzYkMyemZxYTl1ZmxwVHk1Skt6eWpKdEZQT0w3YkVyWTlQZS10eFo5TURuUGw4LURxeHVaMFFISU5JMTA2YTBtdkJuek5Fb1VHMnhqVWREUEdUeGNEZHVudUpBZ0g0NmhfeklZX2s2R0hzRG96RGpxaDJBOG95UWxuZzFGWEZCQnp4T1pjanR0NDJ6MFlPeVFIVEtqbEtzTk41RzR4VmRtV3VhRmtMRW5fTkozVUN2RzUzOUlUbkptVmpqTGFPMDJjZ3N2U0VuRnM0eXNwWW1LeXpnZnhfUjBBcXlqTXEwUFlSbGhLdGdRdVFPLUxXRDVWWVliR2c0ZUN5ZGlTUERCblNaUHBQTWZOMXNpQVVPeVVPWkgzOXptV0JwcXB4TzFvLWtQMEhTUzVzNzU4SVVDbjdaRmVsNnotT3oySWs2RFk1MFR5dG5DNmVZSlA3Nk16OThEWU5QcUlOdGhEQ2xMUWVRUV9RX2NieDJBU29lTmw3VVJrZ2d1Y3Z5VWhxaVZiRXQ0RTlIRzFtNmp3VW1NVWVUVlU1U2NLdm9sLVZBaGJCX0U0WDBhNUtXTFNVc3RiZjJHVHhYMHRsdmdWd0paXy01enlYOHI0Y0M3b3FEd0JhcE5zNEctUGVxUEJQbkZPZENhMTFGSE8zaEJjdkJ1UHhBMFVKUVhnaWE1c1paaUw0RHFTY2o2dWdyenlsbVlUUkY5cHZXaUlTODQxRWJIQVZLT1ZzcDlCSzhicFpoOVVGa3FjaTlQcEpubERBZWNRUDBKaVZsTDlYcTRYd2MtalBSa2dWRzhFMmg1YWc2TkZ4bEwzbVBvX3ZPSk9vRUpZZDNjZ2FlX2tLVXFaenViQkc4T1hhaHF6b1QzMThUUHhJU0tXdGVzM0FITG91dGdGcllURlBRekpIOGZhWUg3U0xJcWJoQTlYT2lnMFlwbFBWYVE4eFMxNzdKWFRQbTU2cmpzeFg4c2FpaHFZS0VzZS1heHlpOE1QWllUb3ExQ211dEM4TXpQSTh2aTdZb2pleV9GVlBrdk9vRl9VZklSRDdzZVlKWTY0SE56QVhSRGFSUlh6UzV4Y1RTeEU4TzdNUENXZm9FanIwTFM3Z2NYZGZJN2hvUUM2eGQ1SnZrMGJCUmlfdFQxN2I0MGNHdlRDb284d1BPZ0liSnVfSktMb19qdGY3b2tTTERveGtkWHJuQzJoNjc5ODkzYk8xR00ycnZzNFJRbUloRFBKdlFmcVpBQVk5c1FRY1hCWEdwckgzRm5FN3lkSUU2alVRUG9oMVBhc0NRSElvd1RhMVRfdnc3S2FvLS05QUVZdGhVcXNIQWZWZFZyS1F2Qm85TG1IdUdXaVZGRE1UTkpxSWpaUlZLZnBQSmdUcU9kTWNYeDB4TEQ0U3ZTdmhYbzR3ZkpTR05Bbkx5UWxiczhhenBmTzIzQmdGLWYxVElfOVFLV3RMRHVpX2xPZjgwLWlSMFpWNFVVYnlMZFY3S1l4RlNYcHBsODRfVk8tX2todEhQZWJGZDRubmdsWHNGcVFfZGtOSXROekl3OHMxYW1jUXhHcjJxQkNwMlljZVZRR1ZZeWIxY0R0OS0zUXFENFA5TUllOEg4ZmlOOENrNFk0TFk3ZjA0LW5QWTExYzBmdm1SUldySXJNNE53cVplalBvMXZ6SHJWX1djZHVkaHFya2lTS2VrUFR5cVVuelZmUzdRcUdiXzNPdEZCTlNNMm9NZkdlRUR5eHJ3RHd3VllydUlqRmk3R1MxU1VoR3hMaGFXanQtcGNqQmp5bEZZUWxWVFc3YU94LTRtYTVKTlNRZHRWampVSlNCdzlEY1FLNEp6Qkl0ZERhLVF0NF9OZTBBbGpoTkY1ZjNwd0Vnd2J1eDMtRDVpVHRXWFNZclQxN1BOb01nQktWNnpTRkQtdHYyNjRfNVpiSkkyUTMwMU15a2kyeE5DVlhoMU1LdDVXUUc2a1gzUDBpVzRSRHpSNmxsNnR4LWxoMDZWLW16ekNnYUkyV1Y0RWlZTVB0ZC0zZWw1amRQcVl4a196X3RHT0RISk9ZMEg5MTZWNmgtRk1OOXZpV3M2R0dsdGpmQy10SURuRkwzVElfMTJuYTY1djlZM0twQzB3VG94LVZpcVl0MVcwWUZXR0N2RkZBPT0=)
        NC_FLUTTER_VERBOSE: '1'
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmR2eHNYR2k1aUFySHR6YTIxLU1VMUdMeWo5ajhFNnhBdkhRWXhyeWRBMWhXNHExYWNHRC1NTHhDMHdXR1JxMHBIVk1QNkJBTXo3YmpQQnVYSUF5NE9OTU05blNBUXZVT2JadFVYcTRCenFrb3p1eVdITTdRSFVLMktqWHZVT1VULVJUMXhHUEtZbmdPaDBxdnlxYldzWElvMjZ0b2dkTkdBdzhiNHRMM1d4U0pFYzdyRjhXVW5HUDZQbmgyWkhWMzZUWkFrdzlGR1NWek1UUkJFS0xNVFBDTnNZclhwUjhmSzZfV05EUUlWdjhrVDVLRkRBbW0waEhnRjI2a1dXVmdBSFFqelJfYjBJTlU5NS1QeS1OdTRxNG9oOHZsNU1RUVZ2QUx2U3VpMXBuVzE2eWZwMkNHa3h1cXFTUk5TWDdKSGRLT1VoQUFYV1dWQzNHV2Y2ZFVtV3M2SlZtZFNvY3VDWXpSWF9qN0JhaEJFRmtqWVRqb1E5SnAzM1puLURoRWhhU2NxS3lsTUlnWUxwWjAzaWNFQUZXQldYa0lEMDE1d2dTR2Y4YWJWUWJTeWZvalpBYzV5N09rREFNTGZGVFBXcG5KM1N4dWwtZHU5TjFsaHNRbm5Ya05YNDlVY3hjdjFrbkl1c3drM2Uxc0ZfOXc5Q1BramlBLW5JZ2JUdXVOY1hTNFRCZlVwVmNtbXlROEx2azlsMVRqMDhEdWY4ZUVva2RnQ3N6Q2M4bGZOdkZ5Q2tOdlFrT3k1bVFFNlVRRVhhMllkU1JDMnY2cE1CWTRPdi1mbVNGLUVCNHhNdlBwaXNMR1JuMUJoR2M4NEZOT09CX1lRZFlZRmFNS3hlUTJFWXdIdEJKaVZGQm1qOWFYLVFMa3k1dExLSTR0dW95ck5PNGNZSXNwRnlvWWFkdHFHWUhwQWlaYV9pN2F4RW1lTXJpXzBvUEgtZ3VoaTJ0TVFpbTY0S1pfSUhGM01uY3VqNGNGd3ZCNkNwTGU2bHlkR04wWHp4a2g3RDY2OGEycW1tU1lLSy1GZjNJVl80NnhoZVQtb0QtZ2VhMHBHT0dkMmNZbm5wQVJDV3hPdHc0aWJMTktTRXR3OUFfZi1GdlJvQ0ZpbjJaNE5IbFlhc3FIN1ctdVVySmxiRlQ1QnpXeVI0eXV1NDA0bWdwN1U4R2VYR0hIUjZLb05OVUZnckpLOTZYS2pCTEU2UGllZF9TNUwyWEJkeWVLTF9iQU5hY2txOTBaeVpuVElNRlRDUmZGbmRoSk05UEc3S3RxS2ZneTRoV2hkcXZZSGF6STc1d2o3VWpMQ1BUQ0VrYnFOWHpaMmFBRkRnc1BKTEFkZGx6SnViMFdvQ3UwdHdiV3JTalFveU5DejNOSGM3Zk5rUlNjTVR0d2NjY01kbjZDVU43MjV3dC1sY2RHdjc4MFlnbVhKYzlXMS05OUhDazNWbWZSMFhsUGkwR1dSdllwWWczS0pFQ2V6TktXSlQxNXBHNG9QcGJ4eG9tV2d0Q2FCQmkyTl9OZTZ5T0xSZW5zeE9BbTJSSVVGVkoyQ2Juc3h4ZzY3NFc5NUFNbkhvMG1HQTFZeks3VHNrWmJGbDR6TFIzWWw2UGpxM3Vpd1RzVFQyT1cyMVRuYXF6OUNIRmZCUjJtUzE0WXd1Qk1qZkdJZ0k4LUFqdXZXS21BNFJTb09QcXRkTmR4TUhLakpnWUZ2c2M4NW9pZEM4dFIySERQVVF3Z3BsdWNkMk9UbVBzaVcxaWNTVlV1ZkpmMHl5QjlKUjFpUkVDdVZOckxNQkcwOHY5ZWN0SElmZ3lNd3NzX2Nrc2tadjM1WFAzbTd2WnA3U2dGa2lxR1lCOW5SQjBzWU81YngyRzAxbXpNV1ZKTEg3eFJJQU9DVnhvdS1RTEN2S1RMRmtyVHNtWkdfdWVGc0pKOHlmbGJTeng1ME8zYk1rVzR3aXlCdS12cTYyNFF6eGJrQWxCTXhBMWJyeDZKTWVNNk1fdFRZbVJaR01ReldiN3d0bTlfZm5FUWhDbHVFTDk1Q210bzZld09KellmQ3pORkktblJPdEZFUlNCc244cVZDZTVuTGFHNFVXOFNQUmdfa1Q3U3dXbzBpWXoyODlhTkNYeElnV0pXX1lBQWtNT1Y1NjYyTTBIaHBHNXQzU0NTX2szYXgyX2lHTFZjQ25yaTBvOVpqQUEybmMyLWFVMXU2WmVCMk5jOVdHcFJDSjc1S3VsamFRTXRfczBxeUdZYkh4cUs1TnVZYTNCOTFWWGhWZ2FQby1PbWZMZzJXejVacnlpS1JfUjAtaS1LaGltb2RuTEVKekxud1ZCNUlGWUxEU190RnJESjRReFN2VVE2RVlScnZaTElsWjNqTG56aWg5QjJKY0RIYWlUNjJRVGp1WG5HeUkydVdxZVNLUEZCUVAycEpFek1ncUxWSWtUT0VSdjFuaDdUZ1FUZlRjYkdSaVQxb2hDR2ZUYWt3MW1HVWxTZE5vVndzRHIzbFRXbHE3UzJmT19udkJ4SjhrU0VleG1adWdtM2lMQWdVbExfZ0hQWDhMMko1U0lyWnU5T3Q2N1FIaEFpOWFMVmNoWWdHMlRuNWdDTlUyZlJYT3hWbnZXNGstWU5objM4U3ZCcVFhRlJRSUpIclJfNkgxaGdYc3l5S2haNm56eXMwSDgzN1RnX1lLemtHU0R4LVd3Q3hRRVJhbkJ5RzR6dVVLaGpDZDM0QTNtMGJsRUxhVHhCQmh3UUhEWDBGLXBYdGh2N0YwdTBMcGZvOEdsVzNzaUkxejFSZ3BTbjEteVVHN1J6Ukk3U1Y1SW5xMXIwckxrT3JMOTE3OTFFZVBGbmFTSmJCLUwxcHVEbmxjVmQ3VXpENFlGU3V6RW5vUmgtTGtrOVh3bmt5blB0My1uTDZhOEZROHBZUWMzSkJEUFZMajVZVVJ0RXFiN3I4VjJhSWtPMmhHd2dEdEk3Zmw3SEZLMFo5YjVDOEgtaTE3THpXSGNCampnc0s1bUtHMUVCa19lWVI0T3Q2VThraUpTQVNQbTRaMEloZ00tZzFQTjVBVFR0ZXVueTlyWVhlQ25Oa0p5cjVCNUFFLVhva2JCVWZQTXBGT1pzNzhFZmJ4Znd4blJFckxIbWpYZEQzaXgxMUhIblozcmZORk40a3VYZEU0RzJaVmhSMU5hNXkxZXN4TTlpN3BxV1RTWlhIZFIxWFRtcTBYbUhvWWNjbkV4WXY3eHlyUGt2NEE0Q25INzhFZVFEa1BPc3E2RDBhS2RpdHhLMHNyUFJtUzdWanpNRUpWUXhoWHp2aDRXWndCMGdLUUtSc0gxdlFSendDNEo3d3J1cjJOWjJKNm1TbFJNVUtPUm1Xc0xjUzhNdGw5RkJRVUszRERuSlJ1eFAyYnQ0ajZBOXZYWF84Vk9GQXE0cHZXU290YUZicDJtQ0RqcXJkc3lVdHVSWTZrTHJaNlhVTFRpYWFJSE5nNEltaEZjNGprMHJBeXlhUTNQWW90TjduRUF0Q1gxS29QaWJVV2Q1ZmFISjdKWEJpeXVXZ0RibTEyNUxQSk9ldFNpemdFZC1WR1ZUTXVRd2VzdVpKeHRaRDg4cWtHcG5rcmgzUXJicURVaGt6WkpsWXg0OTl2NHF6eW5HQUVHQTdsRkJqZElVeW5CYlJnSVdaNWhDTkkzUEtjdlZXZzkzd0VxX25oNWVKajU1WEdFMUwzLUFzYTVLZnpPaUpnLThzNFh5ZmlOb0hHSVpFZWNLV2JQVzNuN01xT1lQazJMWlpiRkhFazJMUmc1bElzYzNkZFc0NUJOODFGWWU2TkJLV3N6VXZxMnFNZUwtU3VKV2pvQVlvN2NDSENwZ29YT3E0MDVzWE1MelpOYzRVWTVhMS1iT080Vk9jS0lDd2ZYOHdZZUstdE1iN2tMTVh6UEpFM1VWeVZsRHotUUxmMU8wOTc1RkpROHVaYkJ6WC1pdVc5bGVGY05kU1drbUhXTTdQUkk0RjZKRGdTVDFsMW9EZWlwc0w1WXprY2U2OEZsVllfSnRmOWlELTlaWEdiMEZZMnpIbnFESEp4QWpWUWM4Znp5bW1SeU56MDJPRHROQkZ2SXdYZTJCM1NKOTgyNWdQUG00VkczeU5id3NXTTJzS0E2X3pTa3V4UFA4U01jNy1HQ2hER015WGpKYmtmSGxoQlp6SHp6UElhd1JPaVVUalVMbzI0Q2xqcnlZWXNwd1lqeUh0d0dTdXFULUNHZmVKcGR0M2RNeEI1QkVxM0d0VzhWZlF6VlNvTnJCbnlwY0dXTGZCZTAtTzRoRGUyV3B5R29saVFMcE9hbHJCVGhiQi1HVUNSdXY4QS15V3lfRVNaRW9EX2dHZVY1eW5sd2VNTDNWOXl4TXk2QXVQLS10Q25oMDhjMkkxM3AwbWNlcExBM0JoYVlvX3VVWWZldTE1YmI1VUJlWENhNlBoQmF3NjA0czFZOTZ2OUg1Q19kYW5FTzZxeUVFb2hmZndKQkI5OE5rMTNQZEl0RXJkTnExSE12RVkycHhBUUQyYU5FbVNiUGpXdmFtUGZIVzBYdHdBa3Zva1I5eTlmZEZhN3lIWjhMN1NJaVJ4UDlYbGU2bzRxNHpMQTc5c2hDek5YNlNycTBOVGZkNHNWZ3pzTXJhNU5walFPRzJtWWh1dmVqNVB3YktDUU0xcTR4bHByS05BU0ZMaXoweV8yclU4UUtRYVlOZ2dnM1Bhc3BoUWJQQXVxQnVjb1EyRFN0UVBWbXY4VHp5SlV6MlV0TWE4LUMydVFDSnJmNUYyM1lQRUZzX2RVSldHa2lPQURmbmVQQWxmT3NwVDZDYjIxeWx3U1I1YjgzQVRITG43UDJ3Q2lNbllTZUhQQnpfZE1abjZYRnIteVlJdkR6N3lIU3R0OXFqY1lvVUdic3ZTZWhib2RoSWZRWUNIZTdoeEtqTEdDOXpmemZDV1BsRC1XaEJTckR5d3Jtb3NGT0NJeXZsRTQwcTk3SkRLY25OUVBsZWVnelQ3dGJtQ3BXaUh4eU5XdVNJLVdCam5UTW9oNkNHZ3JoTWRUdndmdjhZSGYxWWkxcVFTeVpGN2NJMm1EWTRINHJVakVxNGFTVjBMeGl0bGJObEMtS3NlSldVX21hTTNTdnJNZTFhT242M0szQjZVZFJnTUtJYkV3d2liZzl2LWZYaG4yQnhwNnRncng5NGhxMjB6WGQwaWVsNjMxLUtkWHQxSG1nUVlfS0tXd3loeG5CSmx2aVNMWTVqOEM1dkhERkQtV1dGT0JlNDN2SDBVc2w2MVlHV0hfanhTUWVWVkdiYkZUTzB6OV9DVGFHaHFZX0Q2Q2tseUF2ekJraE1mWi1tVExSUExsTkxFazR3TzBCZ3dqb1pobVNxMDhzTmY4eTVTQklJY2dKT0JuVmdWSElUSlc0ekVoZWdHbl9KVV9acVJycmlxSVgzUU82cFZWendMSXJQelQ0SElUNW1sdmRlekJyVWVhUmFWUFptcUJSYktETVdkdEdsdGlncUlRd2JGenV6OWtmaGs4am5HakVNS1dyNlpIV1JldXg2NExLMjF5Y1cwNWxNbFNJXzF0SmVvMGZfTDVFSng0TEhpTS15bUNicTBFQUVnZ2NBPQ==)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmR2eHNYb2l4bzdNMmdNT2tCekFuWlBuc3d4X0Y3MnlrbUtYQVhXUDRNdTJBcXNtRW9BTFVWd3p1UlVzT3pfbmJobkJQcXl1ZVNBX3RqYldwWGdPU2FNZTE1Z2c9PQ==)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmR2eHNYLVdMOVliZ3FHOHRORkpYdXdYYUEzLUp4RXowVnMzVGRrRW1rX3FyWXBWSUh2WjlROEhPWUY3Smo5cDlKZnpsZmdFa3pzZzR2dlpnSXhhSzRuV3BwUFE9PQ==)
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmR2eHNYVTJ5X0UxdjJHVlJteDhQekJyWXkwakRxSXA0bXdYMjN0QWhnT2pDUkh6YUlIMDhORE5UbGFiQk4xWjhQYnBFLTlhZ0dvdXdGLU1CNUJuV2VoMDJ5cEE9PQ==)
      flutter: stable
    cache:
      cache_paths:
        - $FCI_BUILD_DIR/build
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
    scripts:
      - |
        # fetch codemagic helper scripts
        rm -rf ~/codemagic-build-scripts
        git clone https://github.com/NevercodeHQ/codemagic-build-scripts.git ~/codemagic-build-scripts/ --depth 1
      - |
        # set up key.properties
        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<'EOF'
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_ALIAS_PASSWORD
        keyAlias=$CM_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter test
      - |
        #!/usr/bin/env sh

        set -e # exit on first failed commandset

        echo $ANDROID_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json
        #echo $IOS_FIREBASE_SECRET | base64 --decode > $FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist
      - flutter build appbundle --release --verbose
      - |
        # generate signed universal apk with user specified keys
        ~/codemagic-build-scripts/android/generate-universal-apks \
          --ks /tmp/keystore.keystore \
          --ks-pass $CM_KEYSTORE_PASSWORD \
          --ks-key-alias $CM_KEY_ALIAS_USERNAME \
          --key-pass $CM_KEY_ALIAS_PASSWORD \
          --pattern 'build/**/outputs/**/*.aab'
    publishing:
      email:
        recipients:
          - spidgorny@gmail.com
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
